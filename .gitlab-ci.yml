stages:
  - tests
  - build
  - deploylocal
  - deploy
  - release

pester_test:
  stage: tests
  tags:
    - windows
  script:
    - pwsh
    - install-module -name pester -Scope CurrentUser -Force -SkipPublisherCheck
    - import-module -name pester
    - invoke-Pester -Script .\test\Test-Unit-Pester.ps1.ps1

# Pester Test Stage
pester_test_coverage:
  stage: tests
  tags:
    - windows
  script:
    - pwsh
    - install-module -name pester -Scope CurrentUser -Force -SkipPublisherCheck
    - import-module -name pester
    - invoke-Pester -Script .\build\bt0-ci-test-pester.ps1
  artifacts:
    paths:
    - ./coverage.xml

# Script Analyzer Test Stage
script_analyzer_test:
  stage: tests
  tags:
    - windows
  script:
    - pwsh
    - install-module -name PSScriptAnalyzer -Scope CurrentUser -Force -SkipPublisherCheck
    - import-module -name PSScriptAnalyzer
    - .\build\bt1-p2-ci-test-pssa.ps1
  artifacts:
    paths:
    - ./coverage.xml

# Build Module Stage
build_module:
  stage: build
  tags:
    - windows
  rules:
    - if: '$CI_BUILD_STAGE == "tests" && $CI_BUILD_STATUS == "success"'
  script:
    - pwsh
    - .\build\bt1-ci-build-module.ps1
  artifacts:
    paths:
    - ./dist
    - ./coverage.xml

# Create Nuget Package Stage
create_nuget:
  stage: build
  tags:
    - windows
  rules:
    - if: '$CI_BUILD_STAGE == "tests" && $CI_BUILD_STATUS == "success"'
  script:
    - pwsh.exe
    - .\build\bt2-ci-create-packages.ps1
  artifacts:
    paths:
    - ./dist
    - ./coverage.xml

# Deploy GitLab Package Stage
deploy_gitlab:
  stage: deploylocal
  tags:
    - windows
  script:
    - pwsh.exe
    - .\build\bt3-ci-deploy-pushtogitlab.ps1
  rules:
    - if: '$CI_BUILD_STAGE == "build" && $CI_BUILD_STATUS == "success"'
  artifacts:
    paths:
    - ./dist
    - ./coverage.xml

# Deploy Proget Packages Stage
deploy_proget:
  stage: deploylocal
  tags:
    - windows
  script:
    - pwsh.exe
    - .\build\bt4-ci-deploy-pushtoproget.ps1
  rules:
    - if: '$CI_BUILD_STAGE == "build" && $CI_BUILD_STATUS == "success"'
  artifacts:
    paths:
    - ./dist
    - ./coverage.xml

# Deploy Chocolatey Package Stage
deploy_chocolatey:
  stage: deploy
  tags:
    - windows
  script:
    - pwsh.exe
    - .\build\BT5-CI-deploy-PushToChoco.ps1
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_BUILD_STAGE == "deploylocal" && $CI_BUILD_STATUS == "success"'
  artifacts:
    paths:
    - ./dist
    - ./coverage.xml

# Deploy PSGallary Package Stage
deploy_psgallary:
  stage: deploy
  tags:
    - windows
  script:
    - pwsh.exe
    - .\build\bt6-ci-deploy-psgallary.ps1
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_BUILD_STAGE == "deploylocal" && $CI_BUILD_STATUS == "success"'

# Create Release Stage
create_release:
  stage: release
  tags:
    - windows
  script: 
    - pwsh.exe
    - Compress-Archive -Path .\ -DestinationPath Build.gz
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_BUILD_STAGE == "deploy" && $CI_BUILD_STATUS == "success"'
  artifacts:
    paths:
      - Build.gz
      - ./dist
      
# Deploy Coverage to Coverails.io Stage
deploy_coverage:
  stage: release
  tags:
    - windows
  script:
    - pwsh.exe
    - .\bt8-ci-deploy-coveralls-report.ps1
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_BUILD_STAGE == "deploy" && $CI_BUILD_STATUS == "success"'

